package fr.dawan.BOOKPROJECT.entities;

import java.io.Serializable;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import fr.dawan.BOOKPROJECT.enums.Availability;
import fr.dawan.BOOKPROJECT.enums.BookEtat;
import fr.dawan.BOOKPROJECT.enums.Language;


@Entity
@Table(name = "books")
public class Book implements Serializable {

	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private long id;

	@Column(nullable = false)
	private long ISBN;

	@Column(nullable = false, length = 50)
	private String title;

	@Column(nullable = false)
	private LocalDate publishedDate;

	@Column(nullable = false)
	private double weight;

	@Column(nullable = false)
	private int pageNumber;
	
	@Column(nullable = false, length = 50)
	private String publishingHouse;
	

	@Column(nullable = false, length = 500)
	private String description;
	
	
	
	@Enumerated(EnumType.STRING)
	private Language language = Language.FRANÃ‡AIS;
	
	@Column(nullable = false)
	private double price;
	
	@Column(nullable = false)
	private int pointBook;
	
	@Enumerated(EnumType.STRING)
	private BookEtat etat = BookEtat.MOYEN;
	

	@Enumerated(EnumType.STRING)
	private Availability isavailable = Availability.AVAILABLE;
	
	
	@Lob
	private byte[] picture;


	//Liste de mapping book-author
	@ManyToMany(mappedBy = "books")
	private List<Author> authorListInBook = new ArrayList<>();
	
	//Liste de mapping category-book
	@ManyToMany(mappedBy = "booksCategory")
	private List<Category> categoryListInBook = new ArrayList<>();
	
	//Liste de mapping book-user
	@ManyToOne
	@JoinColumn(name = "id_user")
	private User userBook;






}
